!function(n,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e(require("react"));else if("function"==typeof define&&define.amd)define(["react"],e);else{var t="object"==typeof exports?e(require("react")):e(n.react);for(var o in t)("object"==typeof exports?exports:n)[o]=t[o]}}(self,(n=>(()=>{"use strict";var e={137:(n,e,t)=>{t.d(e,{Z:()=>a});var o=t(537),r=t.n(o),A=t(645),i=t.n(A)()(r());i.push([n.id,".msm8T3TW .v_W9LbEa{box-sizing:border-box;border-radius:50%;width:20px;height:20px}","",{version:3,sources:["webpack://./src/avatar/Avatar.module.scss"],names:[],mappings:"AACI,oBACI,qBAAA,CACA,iBAAA,CACA,UAAA,CACA,WAAA",sourcesContent:[".avatar {\n    .image {\n        box-sizing: border-box;\n        border-radius: 50%;\n        width: 20px;\n        height: 20px;\n    }\n}"],sourceRoot:""}]),i.locals={avatar:"msm8T3TW",image:"v_W9LbEa"};const a=i},236:(n,e,t)=>{t.d(e,{Z:()=>b});var o=t(537),r=t.n(o),A=t(645),i=t.n(A),a=t(667),s=t.n(a),l=new URL(t(426),t.b),c=new URL(t(141),t.b),f=new URL(t(366),t.b),p=new URL(t(918),t.b),C=new URL(t(675),t.b),d=i()(r());d.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;800;900&display=swap);"]);var h=s()(l),m=s()(c),u=s()(f),g=s()(p),y=s()(C);d.push([n.id,`@font-face{font-family:"Mazzard";src:url(${h}) format("truetype");font-weight:400;font-style:normal}@font-face{font-family:"Raleway";src:url(${m}) format("truetype");font-weight:900;font-style:normal}@font-face{font-family:"Raleway";src:url(${u}) format("truetype");font-weight:800;font-style:normal}@font-face{font-family:"Raleway";src:url(${g}) format("truetype");font-weight:500;font-style:normal}@font-face{font-family:"Raleway";src:url(${y}) format("truetype");font-weight:400;font-style:normal}html{box-sizing:border-box}*,*:before,*::after{box-sizing:inherit}body,p,h1,h2,h3,h4,ul,li,figure,figcaption{margin:0}body{min-width:320px;scroll-behavior:smooth;position:relative;background-color:#f6f6f6;font-family:"Inter",Arial,Helvetica,sans-serif}main{min-height:100vh}a{text-decoration:none;color:inherit}button:active{opacity:.6}.ZK_Lwpk7{max-width:1410px;margin:0 auto}.d1sP0c8n{display:block;position:relative;padding:12px 20px;outline:none;border:1px solid #f53b49;border-radius:4px;cursor:pointer;box-sizing:border-box;text-decoration:none}.d1sP0c8n .XOhXpEn3{display:inline-block;text-transform:capitalize;font-family:Inter;font-weight:700;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.d1sP0c8n .Y4dm5i3R{display:flex;flex-direction:row;justify-content:center;align-items:center}.d1sP0c8n:active{transform:scale(0.99)}.Qw9FdwXG,.ODHwMYOL{font-size:14px}.tIw92EEI{font-size:12px}.tkKpJK5_{background-color:#f53b49}.tkKpJK5_ .XOhXpEn3{color:#fff}.tkKpJK5_ .qnR9WuKz svg path[fill],.tkKpJK5_ .y_HieNvp svg path[fill]{fill:#fff}.tkKpJK5_ .qnR9WuKz svg path[stroke],.tkKpJK5_ .y_HieNvp svg path[stroke]{stroke:#fff}.tkKpJK5_:hover{background-color:#e32a38}.tkKpJK5_:hover .XOhXpEn3{color:#fff}.Q521ve8U{background-color:rgba(0,0,0,0);color:#f53b49}.Q521ve8U .qnR9WuKz svg path[fill],.Q521ve8U .y_HieNvp svg path[fill]{fill:#f53b49}.Q521ve8U .qnR9WuKz svg path[stroke],.Q521ve8U .y_HieNvp svg path[stroke]{stroke:#f53b49}.Q521ve8U:hover{background-color:#f53b49}.Q521ve8U:hover .XOhXpEn3{color:#fff}.Q521ve8U:hover .qnR9WuKz svg path[fill],.Q521ve8U:hover .y_HieNvp svg path[fill]{fill:#fff}.Q521ve8U:hover .qnR9WuKz svg path[stroke],.Q521ve8U:hover .y_HieNvp svg path[stroke]{stroke:#fff}.h18NKTXs{background-color:rgba(0,0,0,0);border-color:#909cb5;cursor:default}.h18NKTXs .XOhXpEn3{color:#909cb5}.h18NKTXs .qnR9WuKz svg path[fill],.h18NKTXs .y_HieNvp svg path[fill]{fill:#909cb5}.h18NKTXs .qnR9WuKz svg path[stroke],.h18NKTXs .y_HieNvp svg path[stroke]{stroke:#909cb5}.h18NKTXs:hover{background-color:rgba(0,0,0,0)}.h18NKTXs:hover .XOhXpEn3{color:#909cb5}.h18NKTXs:active{transform:none}.z7egNzO8{visibility:hidden}.gTaGWD4V{border-radius:50%;padding:0;width:50px;height:50px}.gTaGWD4V .qnR9WuKz,.gTaGWD4V .y_HieNvp{margin:0}.cgAMkvC0{width:100%;max-width:100%}.qnR9WuKz{display:flex;align-items:center;position:relative;margin-right:6px}.y_HieNvp{display:flex;align-items:center;position:relative;margin-left:6px}._8j9DomCv{margin:0;display:flex;align-items:center;justify-content:center}.d7PeZ5Pc{position:absolute;display:flex;flex-direction:row;align-items:center;justify-content:center;gap:7px;left:0;top:0;width:100%;height:100%}.d7PeZ5Pc div{top:calc(12px + .5em);width:5px;height:5px;border-radius:50%;background:#fff;animation-timing-function:linear}.d7PeZ5Pc div:nth-child(1){animation:clb5sK7z .8s infinite}.d7PeZ5Pc div:nth-child(2){animation:hSmCXfw6 .8s infinite}.d7PeZ5Pc div:nth-child(3){animation:b72Racxm .8s infinite}@keyframes b72Racxm{40%{transform:scale(1)}80%{transform:scale(0.7)}100%{transform:scale(1)}}@keyframes hSmCXfw6{20%{transform:scale(1)}70%{transform:scale(0.7)}100%{transform:scale(1)}}@keyframes clb5sK7z{0%{transform:scale(1)}50%{transform:scale(0.7)}100%{transform:scale(1)}}.Q521ve8U .d7PeZ5Pc div{background-color:#f53b49}.h18NKTXs .d7PeZ5Pc div{background-color:#909cb5}`,"",{version:3,sources:["webpack://./src/styles/foundation/_fonts.scss","webpack://./src/styles/main.scss","webpack://./src/styles/foundation/_variables.scss","webpack://./src/button/Button.module.scss"],names:[],mappings:"AAEA,WACI,qBAAA,CACA,8DAAA,CACA,eAAA,CACA,iBAAA,CAGF,WACE,qBAAA,CACA,8DAAA,CACA,eAAA,CACA,iBAAA,CAGF,WACE,qBAAA,CACA,8DAAA,CACA,eAAA,CACA,iBAAA,CAGF,WACE,qBAAA,CACA,8DAAA,CACA,eAAA,CACA,iBAAA,CAGF,WACE,qBAAA,CACA,8DAAA,CACA,eAAA,CACA,iBAAA,CChCJ,KACE,qBAAA,CAEF,oBAGE,kBAAA,CAEF,2CAUE,QAAA,CAGF,KACE,eAAA,CACA,sBAAA,CACA,iBAAA,CACA,wBChBW,CDiBX,8CAAA,CAGF,KACE,gBAAA,CAGF,EACE,oBAAA,CACA,aAAA,CAGF,cACE,UAAA,CAGF,UACE,gBAAA,CACA,aAAA,CE3CF,UACE,aAAA,CACA,iBAAA,CACA,iBAAA,CACA,YAAA,CACA,wBAAA,CACA,iBAAA,CACA,cAAA,CACA,qBAAA,CACA,oBAAA,CAEA,oBACE,oBAAA,CACA,yBAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA,CACA,eAAA,CACA,sBAAA,CAGF,oBACE,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,kBAAA,CAGF,iBACE,qBAAA,CAKJ,oBACE,cAAA,CAGF,UACE,cAAA,CAIF,UACE,wBDnCU,CCoCV,oBACE,UAAA,CAGF,sEAEE,SAAA,CAEF,0EAEE,WAAA,CAGF,gBACE,wBDjDc,CCkDd,0BACE,UAAA,CAKN,UACE,8BAAA,CACA,aD3DU,CC6DV,sEAEE,YD/DQ,CCiEV,0EAEE,cDnEQ,CCsEV,gBACE,wBDvEQ,CCwER,0BACE,UAAA,CAEF,kFAEE,SAAA,CAEF,sFAEE,WAAA,CAKN,UACE,8BAAA,CACA,oBD7FiB,CC8FjB,cAAA,CACA,oBACE,aDhGe,CCkGjB,sEAEE,YDpGe,CCsGjB,0EAEE,cDxGe,CC2GjB,gBACE,8BAAA,CACA,0BACE,aD9Ga,CCiHjB,iBACE,cAAA,CAIJ,UACE,iBAAA,CAKF,UACE,iBAAA,CACA,SAAA,CACA,UAAA,CACA,WAAA,CACA,wCACE,QAAA,CAKJ,UACE,UAAA,CACA,cAAA,CAKF,UACE,YAAA,CACA,kBAAA,CACA,iBAAA,CACA,gBAAA,CAGF,UACE,YAAA,CACA,kBAAA,CACA,iBAAA,CACA,eAAA,CAGF,WACE,QAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA,CAKF,UACE,iBAAA,CACA,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,sBAAA,CACA,OAAA,CACA,MAAA,CACA,KAAA,CACA,UAAA,CACA,WAAA,CAEF,cAEE,qBAAA,CACA,SAAA,CACA,UAAA,CACA,iBAAA,CACA,eAAA,CACA,gCAAA,CAEF,2BACE,+BAAA,CAGF,2BACE,+BAAA,CAEF,2BACE,+BAAA,CAEF,oBACE,IACE,kBAAA,CAEF,IACE,oBAAA,CAGF,KACE,kBAAA,CAAA,CAIJ,oBACE,IACE,kBAAA,CAEF,IACE,oBAAA,CAEF,KACE,kBAAA,CAAA,CAIJ,oBACE,GACE,kBAAA,CAEF,IACE,oBAAA,CAEF,KACE,kBAAA,CAAA,CAKF,wBACE,wBDtOQ,CC2OV,wBACE,wBDjPe",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;800;900&display=swap');\n\n@font-face {\n    font-family: 'Mazzard';\n    src: url(\"/src/styles/fonts/MazzardM-Regular.ttf\") format('truetype');\n    font-weight: 400;\n    font-style: normal;\n  }\n\n  @font-face {\n    font-family: 'Raleway';\n    src: url('/src/styles/fonts/Raleway-Black.ttf') format('truetype');\n    font-weight: 900;\n    font-style: normal;\n  }\n  \n  @font-face {\n    font-family: 'Raleway';\n    src: url('/src/styles/fonts/Raleway-ExtraBold.ttf') format('truetype');\n    font-weight: 800;\n    font-style: normal;\n  }\n  \n  @font-face {\n    font-family: 'Raleway';\n    src: url('/src/styles/fonts/Raleway-Medium.ttf') format('truetype');\n    font-weight: 500;\n    font-style: normal;\n  }\n  \n  @font-face {\n    font-family: 'Raleway';\n    src: url('/src/styles/fonts/Raleway-Regular.ttf') format('truetype');\n    font-weight: 400;\n    font-style: normal;\n  }","@import \"foundation\";\n\nhtml {\n  box-sizing: border-box;\n}\n*,\n*:before,\n*::after {\n  box-sizing: inherit;\n}\nbody,\np,\nh1,\nh2,\nh3,\nh4,\nul,\nli,\nfigure,\nfigcaption {\n  margin: 0;\n}\n\nbody {\n  min-width: 320px;\n  scroll-behavior: smooth;\n  position: relative;\n  background-color: $color-body;\n  font-family: 'Inter', Arial, Helvetica, sans-serif;\n}\n\nmain {\n  min-height: 100vh;\n}\n\na {\n  text-decoration: none;\n  color: inherit;\n}\n\nbutton:active {\n  opacity: 0.6;\n}\n\n.limited-wrapper {\n  max-width: 1410px;\n  margin: 0 auto\n}\n","\n// Colors\n$color-dark-grey: #1A1A25;\n$color-secondary-dark-grey: #2A2C38;\n$color-secondary-light-grey: #384255;\n$color-light-grey-opacity: #909CB533;\n$color-grey-3: #828282;\n$color-light-grey: #909CB5;\n$color-fonts-grey: #858FA4;\n$color-image-background: #E9EAEF;\n$color-underlayer: #DBDDE5;\n$color-body: #F6F6F6;\n$color-red: #F53B49;\n$color-red-hover: #E32A38;\n$color-green: #2FC509;\n$color-blue: #4B7EE8;\n$color-gold: #F99808;\n\n//Fonts\n$fonts-small: 12px;\n$fonts-small-upper: 14px;\n$fonts-medium: 16px;\n$fonts-medium-upper: 20px;\n$fonts-medium-high: 22px;\n$fonts-large: 24px;\n$fonts-large-2: 26px;\n$fonts-large-medium: 30px;\n$fonts-large-upper: 38px;\n\n",'@import "../styles/main.scss";\n\n\n.button {\n  display: block;\n  position: relative;\n  padding: 12px 20px;\n  outline: none;\n  border: 1px solid $color-red;\n  border-radius: 4px;\n  cursor: pointer;\n  box-sizing: border-box;\n  text-decoration: none;\n  \n  .text {\n    display: inline-block;\n    text-transform: capitalize;\n    font-family: Inter;\n    font-weight: 700;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .content {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n  }\n\n  &:active {\n    transform: scale(0.99);\n  }\n}\n\n//sizes\n.size--l, .size--m {\n  font-size: 14px;\n}\n\n.size--s {\n  font-size: 12px;\n}\n\n//view\n.primary {\n  background-color: $color-red;\n  .text {\n    color: white;\n  }\n\n  .icon--left svg path[fill],\n  .icon--right svg path[fill] {\n    fill: white;\n  }\n  .icon--left svg path[stroke],\n  .icon--right svg path[stroke] {\n    stroke: white;\n  }\n\n  &:hover {\n    background-color: $color-red-hover;\n    .text {\n      color: white;\n    }\n\n  }\n}\n.secondary {\n  background-color: transparent;\n  color: $color-red;\n\n  .icon--left svg path[fill],\n  .icon--right svg path[fill] {\n    fill: $color-red;\n  }\n  .icon--left svg path[stroke],\n  .icon--right svg path[stroke] {\n    stroke: $color-red;\n  }\n\n  &:hover {\n    background-color: $color-red;\n    .text {\n      color: white;\n    }\n    .icon--left svg path[fill],\n    .icon--right svg path[fill] {\n      fill: white;\n    }\n    .icon--left svg path[stroke],\n    .icon--right svg path[stroke] {\n      stroke: white;\n    }\n  }\n}\n\n.disabled {\n  background-color: transparent;\n  border-color: $color-light-grey;\n  cursor:default;\n  .text {\n    color: $color-light-grey;\n  }\n  .icon--left svg path[fill],\n  .icon--right svg path[fill] {\n    fill: $color-light-grey;\n  }\n  .icon--left svg path[stroke],\n  .icon--right svg path[stroke] {\n    stroke: $color-light-grey;\n  }\n\n  &:hover {\n    background-color: transparent;\n    .text {\n      color: $color-light-grey;\n    }\n  }\n  &:active {\n    transform: none;\n  }\n}\n\n.loading {\n  visibility: hidden;\n}\n\n//shape\n\n.shape--round {\n  border-radius: 50%;\n  padding: 0;\n  width: 50px;\n  height: 50px;\n  .icon--left, .icon--right {\n    margin: 0;\n  }\n}\n\n//width\n.width--full {\n  width: 100%;\n  max-width: 100%;\n}\n\n//icons\n\n.icon--left {\n  display: flex;\n  align-items: center;\n  position: relative;\n  margin-right: 6px;\n}\n\n.icon--right {\n  display: flex;\n  align-items: center;\n  position: relative;\n  margin-left: 6px;\n}\n\n.only-icon {\n  margin: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n//loader\n\n.lds-ellipsis {\n  position: absolute;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  gap: 7px;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n}\n.lds-ellipsis div {\n  // position: absolute;\n  top: calc(12px + 0.5em);\n  width: 5px;\n  height: 5px;\n  border-radius: 50%;\n  background: #fff;\n  animation-timing-function: linear;\n}\n.lds-ellipsis div:nth-child(1) {\n  animation: lds-ellipsis1 0.8s infinite;\n}\n\n.lds-ellipsis div:nth-child(2) {\n  animation: lds-ellipsis2 0.8s infinite;\n}\n.lds-ellipsis div:nth-child(3) {\n  animation: lds-ellipsis3 0.8s infinite;\n}\n@keyframes lds-ellipsis3 {\n  40% {\n    transform: scale(1);\n  }\n  80% {\n    transform: scale(0.7);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n}\n\n@keyframes lds-ellipsis2 {\n  20% {\n    transform: scale(1);\n  }\n  70% {\n    transform: scale(0.7);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n\n@keyframes lds-ellipsis1 {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(0.7);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n\n.secondary {\n  .lds-ellipsis div {\n    background-color: $color-red;\n  }\n}\n\n.disabled {\n  .lds-ellipsis div {\n    background-color: $color-light-grey;\n  }\n}\n'],sourceRoot:""}]),d.locals={"limited-wrapper":"ZK_Lwpk7",button:"d1sP0c8n",text:"XOhXpEn3",content:"Y4dm5i3R","size--l":"Qw9FdwXG","size--m":"ODHwMYOL","size--s":"tIw92EEI",primary:"tkKpJK5_","icon--left":"qnR9WuKz","icon--right":"y_HieNvp",secondary:"Q521ve8U",disabled:"h18NKTXs",loading:"z7egNzO8","shape--round":"gTaGWD4V","width--full":"cgAMkvC0","only-icon":"_8j9DomCv","lds-ellipsis":"d7PeZ5Pc","lds-ellipsis1":"clb5sK7z","lds-ellipsis2":"hSmCXfw6","lds-ellipsis3":"b72Racxm"};const b=d},775:(n,e,t)=>{t.d(e,{Z:()=>w});var o=t(537),r=t.n(o),A=t(645),i=t.n(A),a=t(667),s=t.n(a),l=new URL(t(426),t.b),c=new URL(t(141),t.b),f=new URL(t(366),t.b),p=new URL(t(918),t.b),C=new URL(t(675),t.b),d=new URL(t(606),t.b),h=new URL(t(990),t.b),m=i()(r());m.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;800;900&display=swap);"]);var u=s()(l),g=s()(c),y=s()(f),b=s()(p),v=s()(C),x=s()(d),E=s()(h);m.push([n.id,`@font-face{font-family:"Mazzard";src:url(${u}) format("truetype");font-weight:400;font-style:normal}@font-face{font-family:"Raleway";src:url(${g}) format("truetype");font-weight:900;font-style:normal}@font-face{font-family:"Raleway";src:url(${y}) format("truetype");font-weight:800;font-style:normal}@font-face{font-family:"Raleway";src:url(${b}) format("truetype");font-weight:500;font-style:normal}@font-face{font-family:"Raleway";src:url(${v}) format("truetype");font-weight:400;font-style:normal}html{box-sizing:border-box}*,*:before,*::after{box-sizing:inherit}body,p,h1,h2,h3,h4,ul,li,figure,figcaption{margin:0}body{min-width:320px;scroll-behavior:smooth;position:relative;background-color:#f6f6f6;font-family:"Inter",Arial,Helvetica,sans-serif}main{min-height:100vh}a{text-decoration:none;color:inherit}button:active{opacity:.6}.e4tElKhB{max-width:1410px;margin:0 auto}.eefjLsF2{display:flex;flex-direction:row;box-sizing:border-box;width:100%}.TCDJXOt7{gap:12px}.YM322ICd{gap:10px}.AcN5J2CS{margin:0;appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);border:2px solid #858fa4;border-radius:2px;display:grid;place-content:center;cursor:pointer}.AcN5J2CS::before{content:"";box-sizing:inherit;width:12px;height:12px;scale:0;background-image:url(${x});transition:120ms all ease-in-out}.vsfShnvi{width:12px;height:12px;transform:translateY(3px)}.hpLEiVzo{width:16px;height:16px;transform:translateY(1px)}.hpLEiVzo::before{width:16px;height:16px;background-image:url(${E})}.AcN5J2CS:checked::before{scale:1}.JJHqL0V5{font-family:Inter;font-size:14px;color:#384255;font-weight:400}`,"",{version:3,sources:["webpack://./src/styles/foundation/_fonts.scss","webpack://./src/styles/main.scss","webpack://./src/styles/foundation/_variables.scss","webpack://./src/checkbox/Checkbox.module.scss"],names:[],mappings:"AAAQ,WAER,qBACI,CAAA,8DACA,CAAA,eACA,CAAA,iBACA,CAAA,WAGF,qBACE,CAAA,8DACA,CAAA,eACA,CAAA,iBACA,CAAA,WAGF,qBACE,CAAA,8DACA,CAAA,eACA,CAAA,iBACA,CAAA,WAGF,qBACE,CAAA,8DACA,CAAA,eACA,CAAA,iBACA,CAAA,WAGF,qBACE,CAAA,8DACA,CAAA,eACA,CAAA,iBACA,CAAA,KChCJ,qBACE,CAAA,oBAEF,kBAGE,CAAA,2CAEF,QAUE,CAAA,KAGF,eACE,CAAA,sBACA,CAAA,iBACA,CAAA,wBCfW,CAAA,8CDiBX,CAAA,KAGF,gBACE,CAAA,EAGF,oBACE,CAAA,aACA,CAAA,cAGF,UACE,CAAA,UAGF,gBACE,CAAA,aACA,CAAA,UE3CF,YACE,CAAA,kBACA,CAAA,qBACA,CAAA,UACA,CAAA,UAGF,QACE,CAAA,UAGF,QACE,CAAA,UAIF,QACE,CAAA,eACA,CAAA,uBACA,CAAA,8BACA,CAAA,wBACA,CAAA,iBACA,CAAA,YACA,CAAA,oBACA,CAAA,cACA,CAAA,kBACA,UACE,CAAA,kBACA,CAAA,UACA,CAAA,WACA,CAAA,OAIA,CAAA,wDACA,CAAA,gCACA,CAAA,UAIJ,UACE,CAAA,WACA,CAAA,yBACA,CAAA,UAGF,UACE,CAAA,WACA,CAAA,yBACA,CAAA,kBACA,UACE,CAAA,WACA,CAAA,wDACA,CAAA,0BAKF,OACE,CAAA,UAKJ,iBACE,CAAA,cACA,CAAA,aDjE2B,CAAA,eCmE3B",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;800;900&display=swap');\n\n@font-face {\n    font-family: 'Mazzard';\n    src: url(\"/src/styles/fonts/MazzardM-Regular.ttf\") format('truetype');\n    font-weight: 400;\n    font-style: normal;\n  }\n\n  @font-face {\n    font-family: 'Raleway';\n    src: url('/src/styles/fonts/Raleway-Black.ttf') format('truetype');\n    font-weight: 900;\n    font-style: normal;\n  }\n  \n  @font-face {\n    font-family: 'Raleway';\n    src: url('/src/styles/fonts/Raleway-ExtraBold.ttf') format('truetype');\n    font-weight: 800;\n    font-style: normal;\n  }\n  \n  @font-face {\n    font-family: 'Raleway';\n    src: url('/src/styles/fonts/Raleway-Medium.ttf') format('truetype');\n    font-weight: 500;\n    font-style: normal;\n  }\n  \n  @font-face {\n    font-family: 'Raleway';\n    src: url('/src/styles/fonts/Raleway-Regular.ttf') format('truetype');\n    font-weight: 400;\n    font-style: normal;\n  }","@import \"foundation\";\n\nhtml {\n  box-sizing: border-box;\n}\n*,\n*:before,\n*::after {\n  box-sizing: inherit;\n}\nbody,\np,\nh1,\nh2,\nh3,\nh4,\nul,\nli,\nfigure,\nfigcaption {\n  margin: 0;\n}\n\nbody {\n  min-width: 320px;\n  scroll-behavior: smooth;\n  position: relative;\n  background-color: $color-body;\n  font-family: 'Inter', Arial, Helvetica, sans-serif;\n}\n\nmain {\n  min-height: 100vh;\n}\n\na {\n  text-decoration: none;\n  color: inherit;\n}\n\nbutton:active {\n  opacity: 0.6;\n}\n\n.limited-wrapper {\n  max-width: 1410px;\n  margin: 0 auto\n}\n","\n// Colors\n$color-dark-grey: #1A1A25;\n$color-secondary-dark-grey: #2A2C38;\n$color-secondary-light-grey: #384255;\n$color-light-grey-opacity: #909CB533;\n$color-grey-3: #828282;\n$color-light-grey: #909CB5;\n$color-fonts-grey: #858FA4;\n$color-image-background: #E9EAEF;\n$color-underlayer: #DBDDE5;\n$color-body: #F6F6F6;\n$color-red: #F53B49;\n$color-red-hover: #E32A38;\n$color-green: #2FC509;\n$color-blue: #4B7EE8;\n$color-gold: #F99808;\n\n//Fonts\n$fonts-small: 12px;\n$fonts-small-upper: 14px;\n$fonts-medium: 16px;\n$fonts-medium-upper: 20px;\n$fonts-medium-high: 22px;\n$fonts-large: 24px;\n$fonts-large-2: 26px;\n$fonts-large-medium: 30px;\n$fonts-large-upper: 38px;\n\n",'@import "/src/styles/main.scss";\n\n//label\n.label {\n  display: flex;\n  flex-direction: row;\n  box-sizing: border-box;\n  width: 100%;\n}\n\n.label__size--s {\n  gap: 12px;\n}\n\n.label__size--l {\n  gap: 10px;\n}\n\n//checkbox\n.checkbox {\n  margin: 0;\n  appearance: none;\n  -webkit-appearance: none;\n  background-color: transparent;\n  border: 2px solid $color-fonts-grey;\n  border-radius: 2px;\n  display: grid;\n  place-content: center;\n  cursor: pointer;\n  &::before {\n    content: "";\n    box-sizing: inherit;\n    width: 12px;\n    height: 12px;\n    // background-color: $color-green;\n    // border: 1px solid $color-green;\n    // border-radius: 4px;\n    scale: 0;\n    background-image: url("../assets/check_box_active_12x12.svg");\n    transition: 120ms all ease-in-out;\n  }\n}\n\n.checkbox__size--s {\n  width: 12px;\n  height: 12px;\n  transform: translateY(3px);\n}\n\n.checkbox__size--l {\n  width: 16px;\n  height: 16px;\n  transform: translateY(1px);\n  &::before {\n    width: 16px;\n    height: 16px;\n    background-image: url("../assets/check_box_active_16х16.svg");\n  }\n}\n\n.checkbox:checked {\n  &::before {\n    scale: 1;\n  }\n}\n\n//text\n.text {\n  font-family: Inter;\n  font-size: 14px;\n  color: $color-secondary-light-grey;\n  font-weight: 400;\n}\n'],sourceRoot:""}]),m.locals={"limited-wrapper":"e4tElKhB",label:"eefjLsF2","label__size--s":"TCDJXOt7","label__size--l":"YM322ICd",checkbox:"AcN5J2CS","checkbox__size--s":"vsfShnvi","checkbox__size--l":"hpLEiVzo",text:"JJHqL0V5"};const w=m},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,A){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(i[s]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);o&&i[c[0]]||(void 0!==A&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=A),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),e.push(c))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),A="/*# ".concat(r," */");return[e].concat([A]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var A={},i=[],a=0;a<n.length;a++){var s=n[a],l=o.base?s[0]+o.base:s[0],c=A[l]||0,f="".concat(l," ").concat(c);A[l]=c+1;var p=t(f),C={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(C);else{var d=r(C,o);o.byIndex=a,e.splice(a,0,{identifier:f,updater:d,references:1})}i.push(f)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var A=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<A.length;i++){var a=t(A[i]);e[a].references--}for(var s=o(n,r),l=0;l<A.length;l++){var c=t(A[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}A=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var A=t.sourceMap;A&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},606:(n,e,t)=>{n.exports=t.p+"b51445dc0bbd31151ef1.svg"},990:(n,e,t)=>{n.exports=t.p+"b53cb66907c98bce2dbd.svg"},426:(n,e,t)=>{n.exports=t.p+"5f717a122f2df13f1416.ttf"},141:(n,e,t)=>{n.exports=t.p+"6d75f2b870b0a5df344d.ttf"},366:(n,e,t)=>{n.exports=t.p+"8b7015f87bd9859e1382.ttf"},918:(n,e,t)=>{n.exports=t.p+"601cda68c7b7bbcc9a12.ttf"},675:(n,e,t)=>{n.exports=t.p+"3927fa2a37e6f7f4c7c0.ttf"},156:e=>{e.exports=n}},t={};function o(n){var r=t[n];if(void 0!==r)return r.exports;var A=t[n]={id:n,exports:{}};return e[n](A,A.exports,o),A.exports}o.m=e,o.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return o.d(e,{a:e}),e},o.d=(n,e)=>{for(var t in e)o.o(e,t)&&!o.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),o.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),o.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},(()=>{var n;o.g.importScripts&&(n=o.g.location+"");var e=o.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");if(t.length)for(var r=t.length-1;r>-1&&!n;)n=t[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),o.p=n})(),o.b=document.baseURI||self.location.href,o.nc=void 0;var r={};return(()=>{o.r(r),o.d(r,{Avatar:()=>U,Button:()=>v,Checkbox:()=>B});var n=o(156),e=o.n(n),t=o(379),A=o.n(t),i=o(795),a=o.n(i),s=o(569),l=o.n(s),c=o(565),f=o.n(c),p=o(216),C=o.n(p),d=o(589),h=o.n(d),m=o(236),u={};u.styleTagTransform=h(),u.setAttributes=f(),u.insert=l().bind(null,"head"),u.domAPI=a(),u.insertStyleElement=C(),A()(m.Z,u);const g=m.Z&&m.Z.locals?m.Z.locals:void 0;function y(n){var e,t,o="";if("string"==typeof n||"number"==typeof n)o+=n;else if("object"==typeof n)if(Array.isArray(n))for(e=0;e<n.length;e++)n[e]&&(t=y(n[e]))&&(o&&(o+=" "),o+=t);else for(e in n)n[e]&&(o&&(o+=" "),o+=e);return o}const b=function(){for(var n,e,t=0,o="";t<arguments.length;)(n=arguments[t++])&&(e=y(n))&&(o&&(o+=" "),o+=e);return o},v=({tag:n="button",className:t,label:o,view:r="primary",IconLeft:A,IconRight:i,width:a="default",shape:s="default",size:l="l",onlyIcon:c=!1,loading:f=!1,onClick:p,href:C="#"})=>{const d=c&&!o&&(A&&!i||i&&!A),h=o??"",m=b(g.button,t,{[g.primary]:"primary"===r,[g.secondary]:"secondary"===r,[g.disabled]:"disabled"===r,[g["width--default"]]:"default"===a,[g["width--full"]]:"full"===a,[g["size--s"]]:"s"===l,[g["size--m"]]:"m"===l,[g["size--l"]]:"l"===l,[g["only-icon"]]:d,[g["shape--round"]]:"round"===s}),u="disabled"===r;let y=e().createElement("div",{className:g["lds-ellipsis"]},e().createElement("div",null),e().createElement("div",null),e().createElement("div",null));const v=e().createElement(e().Fragment,null,e().createElement("div",{className:b(g.content,{[g.loading]:f})},A&&e().createElement("span",{className:g["icon--left"]},e().createElement(A,null)),e().createElement("span",{className:g.text},h),i&&e().createElement("span",{className:g["icon--right"]},e().createElement(i,null))),f&&y);return"a"===n?e().createElement("a",{className:m,href:C},v):e().createElement("button",{className:m,onClick:n=>{u||f||!p||p(n)}},v)};var x=o(775),E={};E.styleTagTransform=h(),E.setAttributes=f(),E.insert=l().bind(null,"head"),E.domAPI=a(),E.insertStyleElement=C(),A()(x.Z,E);const w=x.Z&&x.Z.locals?x.Z.locals:void 0,B=({className:t,name:o,label:r,size:A="s",value:i,onChange:a,checked:s=!1,children:l})=>{const[c,f]=(0,n.useState)(s),p=b(w.label,t,{[w["label__size--l"]]:"l"===A,[w["label__size--s"]]:"s"===A}),C=b(w.checkbox,{[w["checkbox__size--l"]]:"l"===A,[w["checkbox__size--s"]]:"s"===A});return e().createElement("label",{className:p},e().createElement("input",{className:C,type:"checkbox",name:o,value:i,onChange:n=>{a&&a(n)},checked:c,onClick:()=>{f((n=>!n))}}),!l&&r&&e().createElement("span",{className:w.text},r),!r&&l&&e().createElement("span",null,l))};var k=o(137),F={};F.styleTagTransform=h(),F.setAttributes=f(),F.insert=l().bind(null,"head"),F.domAPI=a(),F.insertStyleElement=C(),A()(k.Z,F);const $=k.Z&&k.Z.locals?k.Z.locals:void 0,z=({color:n="white"})=>e().createElement(e().Fragment,null,e().createElement("svg",{width:"20",height:"21",viewBox:"0 0 20 21",fill:"none",xmlns:"http://www.w3.org/2000/svg"},e().createElement("g",{id:"Group"},e().createElement("path",{id:"Vector",d:"M10 0.495117C4.47773 0.495117 0 4.97197 0 10.4947C0 16.0174 4.47729 20.4942 10 20.4942C15.5231 20.4942 20 16.0174 20 10.4947C20 4.97197 15.5231 0.495117 10 0.495117ZM10 3.4851C11.8273 3.4851 13.308 4.96626 13.308 6.79267C13.308 8.61951 11.8273 10.1002 10 10.1002C8.17359 10.1002 6.69288 8.61951 6.69288 6.79267C6.69288 4.96626 8.17359 3.4851 10 3.4851ZM9.9978 17.8798C8.17535 17.8798 6.50619 17.2161 5.21875 16.1175C4.90512 15.85 4.72415 15.4578 4.72415 15.0462C4.72415 13.1939 6.22332 11.7114 8.07608 11.7114H11.9248C13.778 11.7114 15.2715 13.1939 15.2715 15.0462C15.2715 15.4582 15.0914 15.8496 14.7773 16.1171C13.4903 17.2161 11.8207 17.8798 9.9978 17.8798Z",fill:n,"fill-opacity":"0.7"})))),U=({color:n="#858FA4",className:t,url:o})=>{const r=b($.avatar,t);return e().createElement("div",{className:r},!o&&e().createElement(z,{color:n}),o&&e().createElement("img",{className:$.image,src:o,alt:"avatar"}))}})(),r})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,