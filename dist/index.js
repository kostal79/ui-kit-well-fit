/*! For license information please see index.js.LICENSE.txt */
!function(e,n){if("object"==typeof exports&&"object"==typeof module)module.exports=n(require("react"));else if("function"==typeof define&&define.amd)define(["react"],n);else{var r="object"==typeof exports?n(require("react")):n(e.react);for(var o in r)("object"==typeof exports?exports:e)[o]=r[o]}}(self,(e=>(()=>{"use strict";var n={236:(e,n,r)=>{r.d(n,{Z:()=>s});var o=r(537),t=r.n(o),a=r(645),c=r.n(a)()(t());c.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;800;900&display=swap);"]),c.push([e.id,".d1sP0c8n{padding:12px 20px;background-color:rgba(0,0,0,0);outline:none;border:1px solid #f53b49;border-radius:4px;text-transform:capitalize;cursor:pointer}.d1sP0c8n .XOhXpEn3{color:#f53b49;font-family:Inter;font-size:14px;font-weight:700;white-space:nowrap}.d1sP0c8n:hover{background-color:#f53b49}.d1sP0c8n:hover .XOhXpEn3{color:#fff}.d1sP0c8n:active{transform:scale(0.98)}.tkKpJK5_{background-color:#f53b49}.tkKpJK5_ .XOhXpEn3{color:#fff}.tkKpJK5_:hover{background-color:#e32a38}.tkKpJK5_:hover .XOhXpEn3{color:#fff}.h18NKTXs{border-color:#909cb5}.h18NKTXs .XOhXpEn3{color:#909cb5}.h18NKTXs:hover{background-color:rgba(0,0,0,0)}.h18NKTXs:hover .XOhXpEn3{color:#909cb5}.h18NKTXs:active{transform:none}","",{version:3,sources:["webpack://./src/button/Button.module.scss","webpack://./src/styles/foundation/_variables.scss"],names:[],mappings:"AAGA,UACE,iBAAA,CACA,8BAAA,CACA,YAAA,CACA,wBAAA,CACA,iBAAA,CACA,yBAAA,CACA,cAAA,CAEA,oBACE,aAAA,CACA,iBAAA,CACA,cAAA,CACA,eAAA,CACA,kBAAA,CAGF,gBACE,wBCRQ,CDSR,0BACI,UAAA,CAGN,iBACE,qBAAA,CAIJ,UACE,wBCnBU,CDoBV,oBACE,UAAA,CAEF,gBACE,wBCvBc,CDwBd,0BACI,UAAA,CAKR,UACI,oBCrCe,CDsCf,oBACI,aCvCW,CDyCf,gBACI,8BAAA,CACA,0BACI,aC5CO,CD+Cf,iBACI,cAAA",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;800;900&display=swap");\n@import "../styles/foundation/variables";\n\n.button {\n  padding: 12px 20px;\n  background-color: transparent;\n  outline: none;\n  border: 1px solid $color-red;\n  border-radius: 4px;\n  text-transform: capitalize;\n  cursor: pointer;\n\n  .text {\n    color: $color-red;\n    font-family: Inter;\n    font-size: 14px;\n    font-weight: 700;\n    white-space: nowrap;\n  }\n\n  &:hover {\n    background-color: $color-red;\n    .text {\n        color: white;\n    }\n  }\n  &:active {\n    transform: scale(0.98);\n  }\n}\n\n.primary {\n  background-color: $color-red;\n  .text {\n    color: white;\n  }\n  &:hover {\n    background-color: $color-red-hover;\n    .text {\n        color: white;\n    }\n  }\n}\n\n.disabled {\n    border-color: $color-light-grey;\n    .text {\n        color: $color-light-grey;\n    }\n    &:hover {\n        background-color: transparent;\n        .text {\n            color: $color-light-grey;\n        }\n    }\n    &:active {\n        transform: none;\n    }\n}\n',"\n// Colors\n$color-dark-grey: #1A1A25;\n$color-secondary-dark-grey: #2A2C38;\n$color-grey-button: #384255;\n$color-secondary-light-grey: #384255;\n$color-light-grey-opacity: #909CB533;\n$color-grey-3: #828282;\n$color-light-grey: #909CB5;\n$color-fonts-grey: #858FA4;\n$color-image-background: #E9EAEF;\n$color-underlayer: #DBDDE5;\n$color-body: #F6F6F6;\n$color-red: #F53B49;\n$color-red-hover: #E32A38;\n$color-green: #2FC509;\n$color-blue: #4B7EE8;\n$color-gold: #F99808;\n\n//Fonts\n$fonts-small: 12px;\n$fonts-small-upper: 14px;\n$fonts-medium: 16px;\n$fonts-medium-upper: 20px;\n$fonts-medium-high: 22px;\n$fonts-large: 24px;\n$fonts-large-2: 26px;\n$fonts-large-medium: 30px;\n$fonts-large-upper: 38px;\n\n"],sourceRoot:""}]),c.locals={button:"d1sP0c8n",text:"XOhXpEn3",primary:"tkKpJK5_",disabled:"h18NKTXs"};const s=c},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var r="",o=void 0!==n[5];return n[4]&&(r+="@supports (".concat(n[4],") {")),n[2]&&(r+="@media ".concat(n[2]," {")),o&&(r+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),r+=e(n),o&&(r+="}"),n[2]&&(r+="}"),n[4]&&(r+="}"),r})).join("")},n.i=function(e,r,o,t,a){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(o)for(var s=0;s<this.length;s++){var i=this[s][0];null!=i&&(c[i]=!0)}for(var l=0;l<e.length;l++){var p=[].concat(e[l]);o&&c[p[0]]||(void 0!==a&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=a),r&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=r):p[2]=r),t&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=t):p[4]="".concat(t)),n.push(p))}},n}},537:e=>{e.exports=function(e){var n=e[1],r=e[3];if(!r)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),t="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(t," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},251:(e,n,r)=>{var o=r(156),t=Symbol.for("react.element"),a=(Symbol.for("react.fragment"),Object.prototype.hasOwnProperty),c=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,s={key:!0,ref:!0,__self:!0,__source:!0};function i(e,n,r){var o,i={},l=null,p=null;for(o in void 0!==r&&(l=""+r),void 0!==n.key&&(l=""+n.key),void 0!==n.ref&&(p=n.ref),n)a.call(n,o)&&!s.hasOwnProperty(o)&&(i[o]=n[o]);if(e&&e.defaultProps)for(o in n=e.defaultProps)void 0===i[o]&&(i[o]=n[o]);return{$$typeof:t,type:e,key:l,ref:p,props:i,_owner:c.current}}n.jsx=i,n.jsxs=i},893:(e,n,r)=>{e.exports=r(251)},379:e=>{var n=[];function r(e){for(var r=-1,o=0;o<n.length;o++)if(n[o].identifier===e){r=o;break}return r}function o(e,o){for(var a={},c=[],s=0;s<e.length;s++){var i=e[s],l=o.base?i[0]+o.base:i[0],p=a[l]||0,f="".concat(l," ").concat(p);a[l]=p+1;var u=r(f),d={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==u)n[u].references++,n[u].updater(d);else{var A=t(d,o);o.byIndex=s,n.splice(s,0,{identifier:f,updater:A,references:1})}c.push(f)}return c}function t(e,n){var r=n.domAPI(n);return r.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;r.update(e=n)}else r.remove()}}e.exports=function(e,t){var a=o(e=e||[],t=t||{});return function(e){e=e||[];for(var c=0;c<a.length;c++){var s=r(a[c]);n[s].references--}for(var i=o(e,t),l=0;l<a.length;l++){var p=r(a[l]);0===n[p].references&&(n[p].updater(),n.splice(p,1))}a=i}}},569:e=>{var n={};e.exports=function(e,r){var o=function(e){if(void 0===n[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}n[e]=r}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(r)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,r)=>{e.exports=function(e){var n=r.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(r){!function(e,n,r){var o="";r.supports&&(o+="@supports (".concat(r.supports,") {")),r.media&&(o+="@media ".concat(r.media," {"));var t=void 0!==r.layer;t&&(o+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),o+=r.css,t&&(o+="}"),r.media&&(o+="}"),r.supports&&(o+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,r)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},156:n=>{n.exports=e}},r={};function o(e){var t=r[e];if(void 0!==t)return t.exports;var a=r[e]={id:e,exports:{}};return n[e](a,a.exports,o),a.exports}o.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return o.d(n,{a:n}),n},o.d=(e,n)=>{for(var r in n)o.o(n,r)&&!o.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},o.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.nc=void 0;var t={};return(()=>{o.r(t),o.d(t,{Button:()=>w});var e=o(893),n=o(379),r=o.n(n),a=o(795),c=o.n(a),s=o(569),i=o.n(s),l=o(565),p=o.n(l),f=o(216),u=o.n(f),d=o(589),A=o.n(d),v=o(236),h={};h.styleTagTransform=A(),h.setAttributes=p(),h.insert=i().bind(null,"head"),h.domAPI=c(),h.insertStyleElement=u(),r()(v.Z,h);const m=v.Z&&v.Z.locals?v.Z.locals:void 0;function g(e){var n,r,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(r=g(e[n]))&&(o&&(o+=" "),o+=r);else for(n in e)e[n]&&(o&&(o+=" "),o+=n);return o}var y,b,C=o(156);function x(){return x=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o])}return e},x.apply(this,arguments)}const E=function(e){return C.createElement("svg",x({xmlns:"http://www.w3.org/2000/svg",width:"1em",height:"1em",fill:"none",viewBox:"0 0 16 16"},e),y||(y=C.createElement("g",{fill:"#fff",clipPath:"url(#menu_svg__a)"},C.createElement("path",{d:"M3.333 0H.667A.667.667 0 0 0 0 .667v2.666C0 3.701.299 4 .667 4h2.666A.667.667 0 0 0 4 3.333V.667A.667.667 0 0 0 3.333 0M3.333 6H.667A.667.667 0 0 0 0 6.667v2.666c0 .368.299.667.667.667h2.666A.667.667 0 0 0 4 9.333V6.667A.667.667 0 0 0 3.333 6M3.333 12H.667a.667.667 0 0 0-.667.667v2.666c0 .368.299.667.667.667h2.666A.667.667 0 0 0 4 15.333v-2.666A.667.667 0 0 0 3.333 12M9.333 0H6.667A.667.667 0 0 0 6 .667v2.666c0 .368.299.667.667.667h2.666A.667.667 0 0 0 10 3.333V.667A.667.667 0 0 0 9.333 0M9.333 6H6.667A.667.667 0 0 0 6 6.667v2.666c0 .368.299.667.667.667h2.666A.667.667 0 0 0 10 9.333V6.667A.667.667 0 0 0 9.333 6M9.333 12H6.667a.667.667 0 0 0-.667.667v2.666c0 .368.299.667.667.667h2.666a.667.667 0 0 0 .667-.667v-2.666A.667.667 0 0 0 9.333 12M15.333 0h-2.666A.667.667 0 0 0 12 .667v2.666c0 .368.299.667.667.667h2.666A.667.667 0 0 0 16 3.333V.667A.667.667 0 0 0 15.333 0M15.333 6h-2.666a.667.667 0 0 0-.667.667v2.666c0 .368.299.667.667.667h2.666A.667.667 0 0 0 16 9.333V6.667A.667.667 0 0 0 15.333 6M15.333 12h-2.666a.667.667 0 0 0-.667.667v2.666c0 .368.299.667.667.667h2.666a.667.667 0 0 0 .667-.667v-2.666a.667.667 0 0 0-.667-.667"}))),b||(b=C.createElement("defs",null,C.createElement("clipPath",{id:"menu_svg__a"},C.createElement("path",{fill:"#fff",d:"M0 0h16v16H0z"})))))};var w=function(n){n.children;var r,o=n.className,t=n.label,a=n.primary,c=n.disabled,s=n.icon,i=n.onClick,l=function(){for(var e,n,r=0,o="";r<arguments.length;)(e=arguments[r++])&&(n=g(e))&&(o&&(o+=" "),o+=n);return o}(m.button,o,((r={})[m.primary]=a,r[m.disabled]=c,r[m.icon]=s,r));return console.log(E),(0,e.jsxs)("button",{className:l,onClick:i,disabled:c,children:[(0,e.jsx)("span",{className:m.text,children:t}),s&&(0,e.jsx)(E,{})]})}})(),t})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,